{"Issues":[{"FromLinter":"typecheck","Text":"String not declared by package unsafe","Severity":"","SourceLines":["\treturn unsafe.String(n.DataChecked(1+i, \"non-empty string\"), l)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/abi/type.go","Offset":0,"Line":669,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"String not declared by package unsafe","Severity":"","SourceLines":["\treturn unsafe.String(n.DataChecked(1+i+l+i2, \"non-empty string\"), l2)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/abi/type.go","Offset":0,"Line":679,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `clear`","Severity":"","SourceLines":["\tclear(s[len(s):oldlen]) // zero/nil out the obsolete elements, for GC"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/slices/slices.go","Offset":0,"Line":227,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `clear`","Severity":"","SourceLines":["\tclear(s[i:]) // zero/nil out the obsolete elements, for GC"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/slices/slices.go","Offset":0,"Line":246,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `clear`","Severity":"","SourceLines":["\t\tclear(s[tot:]) // zero/nil out the obsolete elements, for GC"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/slices/slices.go","Offset":0,"Line":279,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `min`","Severity":"","SourceLines":["\t\tm = min(m, x[i])"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/slices/sort.go","Offset":0,"Line":69,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `max`","Severity":"","SourceLines":["\t\tm = max(m, x[i])"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/slices/sort.go","Offset":0,"Line":99,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"String not declared by package unsafe","Severity":"","SourceLines":["\treturn unsafe.String(\u0026b[0], len(b))"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/errors/join.go","Offset":0,"Line":57,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Uncommon undefined (type rtype has no field or method Uncommon, but does have uncommon)","Severity":"","SourceLines":["\treturn t.Uncommon()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":256,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Str undefined (type rtype has no field or method Str)","Severity":"","SourceLines":["\ts := t.nameOff(t.Str).Name()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":260,"Column":19},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.TFlag undefined (type rtype has no field or method TFlag)","Severity":"","SourceLines":["\tif t.TFlag\u0026abi.TFlagExtraStar != 0 {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":261,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.TFlag undefined (type rtype has no field or method TFlag)","Severity":"","SourceLines":["\tif t.TFlag\u0026abi.TFlagNamed == 0 {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":286,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.HasName undefined (type rtype has no field or method HasName)","Severity":"","SourceLines":["\tif !t.HasName() {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":297,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Equal undefined (type rtype has no field or method Equal)","Severity":"","SourceLines":["\treturn t.Equal != nil"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":427,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"cannot use toRType(t) (value of type rtype) as Type value in return statement: rtype does not implement Type (missing method Kind)","Severity":"","SourceLines":["\treturn toRType(t)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/type.go","Offset":0,"Line":659,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"cannot use toRType(v.typ()) (value of type rtype) as Type value in return statement: rtype does not implement Type (missing method Kind)","Severity":"","SourceLines":["\treturn toRType(v.typ())"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/reflectlite/value.go","Offset":0,"Line":397,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"StringData not declared by package unsafe","Severity":"","SourceLines":["\tstrData := unsafe.StringData(x)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/debuglog.go","Offset":0,"Line":296,"Column":20},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"StringData not declared by package unsafe","Severity":"","SourceLines":["\tdumpmemrange(unsafe.Pointer(unsafe.StringData(s)), uintptr(len(s)))"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/heapdump.go","Offset":0,"Line":161,"Column":37},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"StringData not declared by package unsafe","Severity":"","SourceLines":["\t\tdwrite(unsafe.Pointer(unsafe.StringData(pkgpath)), uintptr(len(pkgpath)))"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/heapdump.go","Offset":0,"Line":205,"Column":32},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `max`","Severity":"","SourceLines":["\tsize = max(size, unsafe.Sizeof(mlink{}))"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/mfixalloc.go","Offset":0,"Line":60,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `min`","Severity":"","SourceLines":["\t\tn = min(n, maxObletBytes)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/mgcmark.go","Offset":0,"Line":1439,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `max`","Severity":"","SourceLines":["\tmaxTrigger = max(maxTrigger, minTrigger)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/mgcpacer.go","Offset":0,"Line":1146,"Column":15},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"undeclared name: `min`","Severity":"","SourceLines":["\ttrigger = min(trigger, maxTrigger)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/mgcpacer.go","Offset":0,"Line":1157,"Column":12},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Str undefined (type rtype has no field or method Str)","Severity":"","SourceLines":["\ts := t.nameOff(t.Str).Name()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/type.go","Offset":0,"Line":26,"Column":19},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.TFlag undefined (type rtype has no field or method TFlag)","Severity":"","SourceLines":["\tif t.TFlag\u0026abi.TFlagExtraStar != 0 {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/type.go","Offset":0,"Line":27,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Uncommon undefined (type rtype has no field or method Uncommon, but does have uncommon)","Severity":"","SourceLines":["\treturn t.Uncommon()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/type.go","Offset":0,"Line":34,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Kind_ undefined (type rtype has no field or method Kind_)","Severity":"","SourceLines":["\tswitch t.Kind_ \u0026 kindMask {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/runtime/type.go","Offset":0,"Line":64,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"missing return","Severity":"","SourceLines":["}"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/internal/fmtsort/sort.go","Offset":0,"Line":182,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"st.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\t\tfor i := range st.Fields {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/abi.go","Offset":0,"Line":238,"Column":21},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"st.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\t\t\tf := \u0026st.Fields[i]"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/abi.go","Offset":0,"Line":239,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Type undefined (type *interfaceType has no field or method Type)","Severity":"","SourceLines":["\treturn toRType(\u0026t.Type).nameOff(off)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":346,"Column":20},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Type undefined (type *interfaceType has no field or method Type)","Severity":"","SourceLines":["\treturn toRType(\u0026t.Type).typeOff(off)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":358,"Column":20},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Type undefined (type *interfaceType has no field or method Type)","Severity":"","SourceLines":["\treturn \u0026t.Type"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":362,"Column":12},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Uncommon undefined (type *interfaceType has no field or method Uncommon, but does have uncommon)","Severity":"","SourceLines":["\treturn t.Uncommon()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":366,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"tt.Key undefined (type *mapType has no field or method Key)","Severity":"","SourceLines":["\treturn toType(tt.Key)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":756,"Column":19},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"tt.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\treturn len(tt.Fields)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":772,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Methods undefined (type *interfaceType has no field or method Methods)","Severity":"","SourceLines":["\tif i \u003c 0 || i \u003e= len(t.Methods) {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":840,"Column":25},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Methods undefined (type *interfaceType has no field or method Methods)","Severity":"","SourceLines":["\tp := \u0026t.Methods[i]"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":843,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.PkgPath undefined (type *interfaceType has no field or method PkgPath)","Severity":"","SourceLines":["\t\t\tm.PkgPath = t.PkgPath.Name()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":849,"Column":18},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Methods undefined (type *interfaceType has no field or method Methods)","Severity":"","SourceLines":["func (t *interfaceType) NumMethod() int { return len(t.Methods) }"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":858,"Column":56},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\tif i \u003c 0 || i \u003e= len(t.Fields) {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":979,"Column":25},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\tp := \u0026t.Fields[i]"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":982,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.PkgPath undefined (type *structType has no field or method PkgPath)","Severity":"","SourceLines":["\t\tf.PkgPath = t.PkgPath.Name()"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":987,"Column":17},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Type undefined (type *structType has no field or method Type)","Severity":"","SourceLines":["\tf.Type = toType(\u0026t.Type)"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1010,"Column":21},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"t.Fields undefined (type *structType has no field or method Fields)","Severity":"","SourceLines":["\t\t\tfor i := range t.Fields {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1077,"Column":21},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"p.Elem undefined (type *ptrType has no field or method Elem)","Severity":"","SourceLines":["\t\tif p.Elem != \u0026t.t {"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1206,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"pp.Str undefined (type ptrType has no field or method Str)","Severity":"","SourceLines":["\tpp.Str = resolveReflectName(newName(s, \"\", false, false))"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1219,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"pp.PtrToThis undefined (type ptrType has no field or method PtrToThis)","Severity":"","SourceLines":["\tpp.PtrToThis = 0"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1220,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"pp.Hash undefined (type ptrType has no field or method Hash)","Severity":"","SourceLines":["\tpp.Hash = fnv1(t.t.Hash, '*')"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1227,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"typecheck","Text":"pp.Elem undefined (type ptrType has no field or method Elem)","Severity":"","SourceLines":["\tpp.Elem = at"],"Replacement":null,"Pos":{"Filename":"../../../../../../../usr/local/Cellar/go/1.22.5/libexec/src/reflect/type.go","Offset":0,"Line":1229,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""}],"Report":{"Linters":[{"Name":"asasalint"},{"Name":"asciicheck"},{"Name":"bidichk"},{"Name":"bodyclose"},{"Name":"containedctx"},{"Name":"contextcheck"},{"Name":"cyclop"},{"Name":"decorder"},{"Name":"deadcode"},{"Name":"depguard"},{"Name":"dogsled"},{"Name":"dupl"},{"Name":"dupword"},{"Name":"durationcheck"},{"Name":"errcheck","Enabled":true,"EnabledByDefault":true},{"Name":"errchkjson"},{"Name":"errname"},{"Name":"errorlint"},{"Name":"execinquery"},{"Name":"exhaustive"},{"Name":"exhaustivestruct"},{"Name":"exhaustruct"},{"Name":"exportloopref"},{"Name":"forbidigo"},{"Name":"forcetypeassert"},{"Name":"funlen"},{"Name":"gci"},{"Name":"gochecknoglobals"},{"Name":"gochecknoinits"},{"Name":"gocognit"},{"Name":"goconst"},{"Name":"gocritic"},{"Name":"gocyclo"},{"Name":"godot"},{"Name":"godox"},{"Name":"goerr113"},{"Name":"gofmt"},{"Name":"gofumpt"},{"Name":"goheader"},{"Name":"goimports"},{"Name":"golint"},{"Name":"gomnd"},{"Name":"gomoddirectives"},{"Name":"gomodguard"},{"Name":"goprintffuncname"},{"Name":"gosec"},{"Name":"gosimple","Enabled":true,"EnabledByDefault":true},{"Name":"govet","Enabled":true,"EnabledByDefault":true},{"Name":"grouper"},{"Name":"ifshort"},{"Name":"importas"},{"Name":"ineffassign","Enabled":true,"EnabledByDefault":true},{"Name":"interfacebloat"},{"Name":"interfacer"},{"Name":"ireturn"},{"Name":"lll"},{"Name":"loggercheck"},{"Name":"maintidx"},{"Name":"makezero"},{"Name":"maligned"},{"Name":"misspell"},{"Name":"nakedret"},{"Name":"nestif"},{"Name":"nilerr"},{"Name":"nilnil"},{"Name":"nlreturn"},{"Name":"noctx"},{"Name":"nonamedreturns"},{"Name":"nosnakecase"},{"Name":"nosprintfhostport"},{"Name":"paralleltest"},{"Name":"prealloc"},{"Name":"predeclared"},{"Name":"promlinter"},{"Name":"reassign"},{"Name":"revive"},{"Name":"rowserrcheck"},{"Name":"scopelint"},{"Name":"sqlclosecheck"},{"Name":"staticcheck","Enabled":true,"EnabledByDefault":true},{"Name":"structcheck"},{"Name":"stylecheck"},{"Name":"tagliatelle"},{"Name":"tenv"},{"Name":"testableexamples"},{"Name":"testpackage"},{"Name":"thelper"},{"Name":"tparallel"},{"Name":"typecheck","Enabled":true,"EnabledByDefault":true},{"Name":"unconvert"},{"Name":"unparam"},{"Name":"unused","Enabled":true,"EnabledByDefault":true},{"Name":"usestdlibvars"},{"Name":"varcheck"},{"Name":"varnamelen"},{"Name":"wastedassign"},{"Name":"whitespace"},{"Name":"wrapcheck"},{"Name":"wsl"},{"Name":"nolintlint"}]}}
